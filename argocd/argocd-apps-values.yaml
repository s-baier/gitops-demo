argocd-apps:
  ## Argo CD Applications
  applications:
  - name: argo-cd
    namespace: argocd
    additionalLabels: {}
    additionalAnnotations: {}
    finalizers:
    - resources-finalizer.argocd.argoproj.io
    project: argo
    sources:
    - repoURL: https://github.com/s-baier/gitops-demo.git
      targetRevision: HEAD
      path: argocd/
      helm:
        valueFiles:
        - $values/argocd/values.yaml
        - $values/argocd/argocd-values.yaml
        - $values/argocd/argocd-apps-values.yaml
    - repoURL: https://github.com/s-baier/gitops-demo.git
      targetRevision: HEAD
      ref: values
    destination:
      server: https://kubernetes.default.svc
      namespace: argocd
    syncPolicy:
      automated:
        prune: false
        selfHeal: true
    revisionHistoryLimit: null
    info:
    - name: url
      value: https://argoproj.github.io/

  ## Argo CD Projects
  projects:
  - name: argo
    namespace: argocd
    additionalLabels: {}
    additionalAnnotations: {}
    finalizers:
    - resources-finalizer.argocd.argoproj.io
    description: Argo CD
    sourceRepos:
    - https://github.com/s-baier/gitops-demo.git
    destinations:
    - namespace: argocd
      server: https://kubernetes.default.svc
    clusterResourceWhitelist:
    - group: '*'
      kind: '*'
    clusterResourceBlacklist: []
    namespaceResourceBlacklist: []
    namespaceResourceWhitelist:
    - group: '*'
      kind: '*'
    sourceNamespaces:
  - name: bootstrap
    namespace: argocd
    additionalLabels: {}
    additionalAnnotations: {}
    finalizers:
    - resources-finalizer.argocd.argoproj.io
    description: Cluster Bootstrap
    sourceRepos:
    - https://github.com/s-baier/gitops-demo.git
    - registry-1.docker.io/bitnamicharts
    destinations:
    - namespace: '*'
      server: https://kubernetes.default.svc
    clusterResourceWhitelist:
    - group: '*'
      kind: '*'
    clusterResourceBlacklist: []
    namespaceResourceBlacklist: []
    namespaceResourceWhitelist:
    - group: '*'
      kind: '*'
    sourceNamespaces:
    - '*'
  - name: dev
    namespace: argocd
    additionalLabels: {}
    additionalAnnotations: {}
    finalizers:
    - resources-finalizer.argocd.argoproj.io
    description: Development
    sourceRepos:
    - https://github.com/s-baier/gitops-demo.git
    - ghcr.io/s-baier
    destinations:
    - namespace: '*'
      server: https://kubernetes.default.svc
    clusterResourceWhitelist:
    - group: '*'
      kind: '*'
    clusterResourceBlacklist: []
    namespaceResourceBlacklist: []
    namespaceResourceWhitelist:
    - group: '*'
      kind: '*'
    sourceNamespaces:
    - '*'

  ## Argo CD ApplicationSets
  applicationsets:
  - name: bootstrap
    namespace: argocd
    additionalLabels: {}
    additionalAnnotations: {}
    generators:
    - git:
        repoURL: https://github.com/s-baier/gitops-demo.git
        revision: HEAD
        directories:
        - path: bootstrap/*
    template:
      metadata:
        name: '{{path.basename}}'
        labels:
          project: '{{path.basename}}'
        annotations: {}
      spec:
        project: bootstrap
        source:
          repoURL: https://github.com/s-baier/gitops-demo.git
          targetRevision: HEAD
          path: '{{path}}'
        destination:
          server: https://kubernetes.default.svc
          namespace: '{{ path.basename }}'
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
          syncOptions:
            - CreateNamespace=true
    syncPolicy:
      preserveResourcesOnDeletion: false
  - name: dev
    namespace: argocd
    additionalLabels: {}
    additionalAnnotations: {}
    generators:
    - git:
        repoURL: https://github.com/s-baier/gitops-demo.git
        revision: HEAD
        directories:
        - path: envs/dev/*
    template:
      metadata:
        name: '{{path.basename}}'
        labels:
          project: '{{path.basename}}'
        annotations: {}
      spec:
        project: dev
        source:
          repoURL: https://github.com/s-baier/gitops-demo.git
          targetRevision: HEAD
          path: '{{path}}'
        destination:
          server: https://kubernetes.default.svc
          namespace: '{{ path.basename }}'
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
          syncOptions:
            - CreateNamespace=true
    syncPolicy:
      preserveResourcesOnDeletion: false

  itemTemplates: []
  extensions: []
